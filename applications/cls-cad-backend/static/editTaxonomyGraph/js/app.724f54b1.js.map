{"version":3,"file":"js/app.724f54b1.js","mappings":"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","sources":["webpack://cls-cytoscape/./src/App.vue","webpack://cls-cytoscape/./src/components/GraphWrapper.vue","webpack://cls-cytoscape/./src/components/GraphContent.vue","webpack://cls-cytoscape/./src/scripts/edgehandle-coloring.js","webpack://cls-cytoscape/./src/scripts/taxonomydata-constraints.js","webpack://cls-cytoscape/./src/stores/HistoryStore.js","webpack://cls-cytoscape/./src/scripts/edgehandle-actions.js","webpack://cls-cytoscape/./src/scripts/edgehandle-conf.js","webpack://cls-cytoscape/./src/components/GraphContent.vue?c1fd","webpack://cls-cytoscape/./src/components/GraphWrapper.vue?7abd","webpack://cls-cytoscape/./src/App.vue?7ccd","webpack://cls-cytoscape/./src/main.js","webpack://cls-cytoscape/webpack/bootstrap","webpack://cls-cytoscape/webpack/runtime/chunk loaded","webpack://cls-cytoscape/webpack/runtime/compat get default export","webpack://cls-cytoscape/webpack/runtime/define property getters","webpack://cls-cytoscape/webpack/runtime/global","webpack://cls-cytoscape/webpack/runtime/hasOwnProperty shorthand","webpack://cls-cytoscape/webpack/runtime/node module decorator","webpack://cls-cytoscape/webpack/runtime/jsonp chunk loading","webpack://cls-cytoscape/webpack/startup"],"sourcesContent":["<template>\r\n  <GraphWrapper></GraphWrapper>\r\n</template>\r\n\r\n<script>\r\n  import GraphWrapper from '@/components/GraphWrapper'\r\n  export default {\r\n    name: 'App',\r\n    components: {\r\n      GraphWrapper,\r\n      // HelloWorld\r\n    },\r\n  }\r\n</script>\r\n\r\n<style></style>\r\n","<template>\r\n  <GraphContent />\r\n</template>\r\n\r\n<script>\r\n  import GraphContent from '@/components/GraphContent'\r\n\r\n  export default {\r\n    name: 'GraphWrapper',\r\n\r\n    components: {\r\n      GraphContent,\r\n    },\r\n  }\r\n</script>\r\n\r\n<style scoped></style>\r\n","<template>\r\n  <div id=\"container\" class=\"h-screen\">\r\n    <div id=\"nav-bar-top\" class=\"bg-background flex flex-row justify-between items-center h-8\">\r\n      <div>{{ infoText }}</div>\r\n      <div class=\"h-full\">\r\n        <!--        <button class='bg-blue-500 hover:bg-lime-600 h-full px-6 mr-2' @click='json'>JSON</button>-->\r\n        <button\r\n          v-if=\"historyStore.getPosition > 0\"\r\n          class=\"bg-button-blue hover:bg-button-hover text-white font-scada rounded font-medium h-full px-6 mr-2\"\r\n          @click=\"undo\">\r\n          Undo\r\n        </button>\r\n        <button class=\"bg-button-blue hover:bg-button-hover text-white font-scada rounded font-medium h-full px-6 mr-2\" @click=\"save\">Save</button>\r\n      </div>\r\n    </div>\r\n    <div id=\"cy\" class='bg-background'></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import cytoscape from 'cytoscape'\r\n  import EdgeHandleActions from '@/scripts/edgehandle-actions'\r\n  import { edgeHandleConf } from '@/scripts/edgehandle-conf'\r\n  import defaultStyle from '@/styles/default.json'\r\n  import { useHistoryStore } from '@/stores/HistoryStore'\r\n\r\n  export default {\r\n    name: 'GraphContent',\r\n\r\n    inject: ['taxonomyDataMessage'],\r\n\r\n    setup() {\r\n      const historyStore = useHistoryStore()\r\n\r\n      return { historyStore }\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        infoText: 'Headlinewrapper (only for debugging)',\r\n        cyNodes: [],\r\n        cyEdges: [],\r\n        taxonomyString: this.taxonomyDataMessage,\r\n        taxonomyData: undefined,\r\n        taxonomyDataHistory: [],\r\n        undoFlag: false,\r\n        taxonomyID: undefined,\r\n        // edge handle add in\r\n        eh: undefined,\r\n        // cxtmenu addin\r\n        nodeMenu: undefined,\r\n        edgeMenu: undefined,\r\n        coreMenu: undefined,\r\n        renameMenu: undefined,\r\n        renameMenuFlag: false,\r\n        cacheNode: undefined,\r\n        // changing element\r\n        oldNodeName: undefined,\r\n        newNodeName: undefined,\r\n        ascIndex: 0,\r\n\r\n        // rename existing element\r\n        oldNode: undefined,\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      this.setTaxonomyData(JSON.parse(this.taxonomyString))\r\n      this.taxonomyID = this.taxonomyData.ID\r\n    },\r\n\r\n    methods: {\r\n      setTaxonomyData: function (history) {\r\n        this.taxonomyData = history\r\n\r\n        this.cyNodes = []\r\n        this.cyEdges = []\r\n\r\n        for (let [key, value] of Object.entries(this.taxonomyData)) {\r\n          this.cyNodes.push({ data: { id: key, name: key } })\r\n          value.forEach((child) => {\r\n            this.cyEdges.push({\r\n              data: { source: key, target: child, name: key + '->' + child },\r\n            })\r\n          })\r\n        }\r\n        this.cy = cytoscape({\r\n          container: document.getElementById('cy'),\r\n\r\n          //boxSelectionEnabled: true,\r\n          //autounselectify: false,\r\n\r\n          layout: {\r\n            name: 'dagre',\r\n            fit: true,\r\n            spacingFactor: 1.5,\r\n          },\r\n\r\n          style: defaultStyle,\r\n\r\n          elements: {\r\n            nodes: this.cyNodes,\r\n            edges: this.cyEdges,\r\n          },\r\n        })\r\n        this.cy.nodes().addClass('node')\r\n        this.cy.$(\"node[name='AnyPart']\").classes('AnyPart')\r\n\r\n        // move nodes on same level (y) with long names apart\r\n        let longNodes = this.cy.$(\"node[name.length > 16]\")\r\n        let nodePairs = {}\r\n\r\n        longNodes.forEach((node) => {\r\n          let x = node.position('x')\r\n          let y = node.position('y')\r\n          if(nodePairs[y] !== undefined) {\r\n            nodePairs[y].push({name: node.data().name, x: x})\r\n          } else {\r\n            nodePairs[y] = [{name: node.data().name, x: x}]\r\n          }\r\n        })\r\n        Object.entries(nodePairs).forEach(pair => {\r\n          if(pair[1].length > 1) {\r\n            pair[1].sort((a,b) => a.x - b.x)\r\n            let leftNode = this.cy.$(\"node[name='\" + pair[1][0].name + \"']\")\r\n            leftNode.shift({x: -(pair[1][0].name.length * 2)})\r\n            while(leftNode.outgoers('node').length > 0) {\r\n              leftNode.outgoers('node').forEach(node => {\r\n                node.shift({x: -(pair[1][0].name.length * 2)})\r\n                leftNode = node\r\n              })\r\n            }\r\n            let rightNode = this.cy.$(\"node[name='\" + pair[1][pair[1].length-1].name + \"']\")\r\n            rightNode.shift({x: pair[1][pair[1].length-1].name.length * 2})\r\n            while(rightNode.outgoers('node').length > 0) {\r\n              rightNode.outgoers('node').forEach(node => {\r\n                node.shift({x: pair[1][pair[1].length-1].name.length * 2})\r\n                rightNode = node\r\n              })\r\n            }\r\n          } else {\r\n            console.log('no pair')\r\n          }\r\n        })\r\n\r\n        this.initNodeMenu()\r\n        this.initEdgeMenu()\r\n        this.initCoreMenu()\r\n        this.eh = this.cy.edgehandles(edgeHandleConf)\r\n      },\r\n\r\n      initNodeMenu: function () {\r\n        this.nodeMenu = this.cy.cxtmenu({\r\n          menuRadius: 75,\r\n          selector: '.node',\r\n          commands: [\r\n            {\r\n              fillColor: 'rgba(200, 200, 200, 0.75)',\r\n              content: '',\r\n              contentStyle: {\r\n                background: \"url('./icons/arrow-turn-down-solid.svg') no-repeat center\",\r\n                backgroundSize: \"30px 30px\",\r\n              },\r\n              select: (node) => {\r\n                console.log(this.nodeMenu)\r\n                this.drawEdge(node.data().name, false)\r\n              },\r\n            },\r\n            {\r\n              fillColor: 'rgba(200, 200, 200, 0.75)',\r\n              content: '',\r\n              contentStyle: {\r\n                background: \"url('./icons/pen-solid.svg') no-repeat center\",\r\n                backgroundSize: \"30px 30px\",\r\n              },\r\n              select: (node) => {\r\n                this.renameNode(node.data().name)\r\n              },\r\n            },\r\n            {\r\n              fillColor: 'rgb(200, 200, 200, 0.75)',\r\n              content: '',\r\n              contentStyle: {\r\n                background: \"url('./icons/trash-solid.svg') no-repeat center\",\r\n                backgroundSize: \"30px 30px\",\r\n              },\r\n              select: (ele) => {\r\n                this.removeNode(ele.data().name)\r\n              },\r\n            },\r\n          ],\r\n          openMenuEvents: 'cxttapstart taphold',\r\n        })\r\n      },\r\n\r\n      initEdgeMenu: function () {\r\n        this.edgeMenu = this.cy.cxtmenu({\r\n          menuRadius: 75,\r\n          selector: 'edge',\r\n          commands: [\r\n            {\r\n              fillColor: 'rgb(200, 200, 200, 0.75)',\r\n              content: '',\r\n              contentStyle: {\r\n                background: \"url('./icons/trash-solid.svg') no-repeat center\",\r\n                backgroundSize: \"30px 30px\",\r\n              },\r\n              select: (edge) => {\r\n                console.log('deleteEdge')\r\n                let ignoreHistory = false\r\n                EdgeHandleActions.removeEdge(this.cy, edge, this.taxonomyData, ignoreHistory)\r\n              },\r\n            },\r\n            {\r\n              fillColor: 'rgb(200, 200, 200, 0.75)',\r\n              content: '',\r\n              contentStyle: {\r\n                background: \"url('./icons/arrow-down-a-z-solid.svg') no-repeat center\",\r\n                backgroundSize: \"30px 30px\",\r\n              },\r\n              select: (edge) => {\r\n                EdgeHandleActions.initTmpEdge(edge)\r\n                let ignoreHistory = true\r\n                EdgeHandleActions.removeEdge(this.cy, edge, this.taxonomyData, ignoreHistory)\r\n                let source = edge.source().data().name\r\n                this.drawEdge(source, true)\r\n              },\r\n            },\r\n          ],\r\n          openMenuEvents: 'cxttapstart taphold',\r\n        })\r\n      },\r\n\r\n      initCoreMenu: function () {\r\n        this.coreMenu = this.cy.cxtmenu({\r\n          menuRadius: 75,\r\n          selector: 'core',\r\n          commands: [\r\n            {\r\n              fillColor: 'rgb(200, 200, 200, 0.75)',\r\n              content: '',\r\n              contentStyle: {\r\n                background: \"url('./icons/diamond-solid.svg') no-repeat center\",\r\n                backgroundSize: \"30px 30px\",\r\n              },\r\n              select: () => {\r\n                this.createNode()\r\n              },\r\n            },\r\n          ],\r\n          openMenuEvents: 'cxttapstart taphold',\r\n        })\r\n      },\r\n\r\n      initRenameMenu: function () {\r\n        this.renameMenu = this.cy.cxtmenu({\r\n          selector: '.highlightNode',\r\n          menuRadius: 75,\r\n          commands: [\r\n            {\r\n              fillColor: 'rgb(200, 200, 200, 0.75)',\r\n              content: '',\r\n              contentStyle: {\r\n                background: \"url('./icons/pen-solid.svg') no-repeat center\",\r\n                backgroundSize: \"30px 30px\",\r\n              },\r\n              select: (node) => {\r\n                this.renameNode(node.data().name)\r\n              },\r\n            },\r\n            {\r\n              fillColor: 'rgb(200, 200, 200, 0.75)',\r\n              content: '',\r\n              contentStyle: {\r\n                background: \"url('./icons/diamond-solid.svg') \",\r\n                backgroundRepeat: \"no-repeat round\",\r\n                backgroundPositionX: 'center',\r\n                backgroundSize: \"50%\",\r\n              },\r\n              select: (ele) => {\r\n                console.log('merge', ele)\r\n                this.mergeNodes(ele.data().name)\r\n              },\r\n            },\r\n          ],\r\n          openMenuEvents: 'cxttapstart taphold',\r\n        })\r\n      },\r\n\r\n      drawEdge: function (nodeName, rearrangeEdge) {\r\n        EdgeHandleActions.drawEdge(nodeName, rearrangeEdge, this.cy, this.eh, this.taxonomyData)\r\n      },\r\n\r\n      createNode: function () {\r\n        this.historyStore.addHistoryEntry(this.taxonomyData)\r\n        this.newNodeName = 'newNode' + this.ascIndex\r\n        this.ascIndex++\r\n        this.cy.add({ data: { id: this.newNodeName, name: this.newNodeName } })\r\n        this.cy.$(\"node[name='\" + this.newNodeName + \"']\").addClass('node')\r\n        this.taxonomyData[this.newNodeName] = []\r\n      },\r\n\r\n      renameNode: function (node) {\r\n        this.oldNodeName = node\r\n        this.cy.$(\"node[name='\" + this.oldNodeName + \"']\").json({ data: { shadowName: this.oldNodeName } })\r\n        this.cy.$(\"node[name='\" + this.oldNodeName + \"']\").json({ data: { name: '' } })\r\n        this.newNodeName = ''\r\n        document.addEventListener('keydown', this.renameEvent, false)\r\n      },\r\n\r\n      renameEvent: function (event) {\r\n        const key = event.key\r\n        if (key.length === 1) {\r\n          this.newNodeName += key\r\n          this.cy.$(\"node[shadowName='\" + this.oldNodeName + \"']\").json({ data: { name: this.newNodeName } })\r\n        }\r\n        if (key === 'Backspace' || key === 'Delete') {\r\n          // equal to slice(0, this.newNodeName.length - 1)\r\n          this.newNodeName = this.newNodeName.slice(0, -1)\r\n          this.cy.$(\"node[shadowName='\" + this.oldNodeName + \"']\").json({ data: { name: this.newNodeName } })\r\n        }\r\n        if (key === 'Enter') {\r\n          // check if newName is non-empty\r\n          if (this.newNodeName.length > 0) {\r\n            this.cy.$(\"node[shadowName='\" + this.oldNodeName + \"']\").json({ data: { name: this.oldNodeName } })\r\n            document.removeEventListener('keydown', this.renameEvent, false)\r\n            this.rename({\r\n              newName: this.newNodeName,\r\n              oldName: this.oldNodeName,\r\n            })\r\n          } else {\r\n            alert(this.oldNodeName + ' cannot be renamed to nothing!')\r\n          }\r\n        }\r\n        if (key === 'Escape') {\r\n          // revoke all changes, set old name\r\n          this.cy.$(\"node[shadowName='\" + this.oldNodeName + \"']\").json({ data: { name: this.oldNodeName } })\r\n          document.removeEventListener('keydown', this.renameEvent, false)\r\n        }\r\n      },\r\n\r\n      rename: function (event) {\r\n        if (event.oldName === event.newName) return\r\n        // edge case: rename to existing other Node -> rename to original\r\n        if (this.taxonomyData[event.newName] !== undefined && this.oldNode !== event.newName) {\r\n          // case rename to existing, then rename to other existing\r\n          if (this.renameMenuFlag && this.cacheNode !== event.newName) {\r\n            this.cy.$(\"node[name='\" + this.cacheNode + \"']\").classes('node')\r\n          }\r\n          if (!this.renameMenuFlag) {\r\n            this.oldNode = event.oldName\r\n            this.nodeMenu.destroy()\r\n          }\r\n          this.cy.$(\"node[name='\" + event.oldName + \"']\").classes('highlightNode')\r\n          this.cy.$(\"node[name='\" + event.newName + \"']\").classes('highlightNodeWithoutOptions')\r\n          this.renameMenuFlag = true\r\n          this.cacheNode = event.newName\r\n          this.initRenameMenu()\r\n          this.cy.$(\"[name='\" + event.oldName + \"']\").json({ data: { name: '(' + event.newName + ')' } })\r\n        } else {\r\n          if (this.oldNode !== event.newName) {\r\n            this.historyStore.addHistoryEntry(this.taxonomyData)\r\n          }\r\n          console.log('renaming ', event.oldName, ' to ', event.newName)\r\n          this.taxonomyData[event.newName] = []\r\n          this.addEdges(event.oldName, event.newName, this.taxonomyData)\r\n          delete this.taxonomyData[event.oldName]\r\n          this.cy.$(\"[name='\" + event.oldName + \"']\").json({ data: { name: event.newName } })\r\n          if (this.renameMenuFlag) {\r\n            this.cy.$(\"node[name='\" + this.cacheNode + \"']\").classes('node')\r\n            this.cy.$(\"node[name='\" + event.newName + \"']\").classes('node')\r\n            this.oldNode = undefined\r\n            this.renameMenuFlag = false\r\n            this.cacheNode = undefined\r\n            this.renameMenu.destroy()\r\n            this.initNodeMenu()\r\n          }\r\n          console.table(this.taxonomyData)\r\n        }\r\n      },\r\n\r\n      removeNode: function (element) {\r\n        this.historyStore.addHistoryEntry(this.taxonomyData)\r\n        // get all edges from AND to selected node\r\n        const edges = EdgeHandleActions.getAllEdges(this.cy, element)\r\n\r\n        // remove edges\r\n        if (edges.length > 0) {\r\n          edges.forEach((element) => {\r\n            let source = element.source().data().name\r\n            let target = element.target().data().name\r\n            this.cy.remove(\"edge[source='\" + source + \"'][target='\" + target + \"']\")\r\n            this.taxonomyData[source].splice(this.taxonomyData[source].indexOf(target), 1)\r\n          })\r\n        }\r\n        // remove node\r\n        this.cy.$(\"node[name='\" + element + \"']\").animate({\r\n          style: {\r\n            opacity: 0.5\r\n          }\r\n        })\r\n        setTimeout(() => {\r\n          this.cy.remove(\"node[name='\" + element + \"']\")\r\n          delete this.taxonomyData[element]\r\n        }, 300)\r\n      },\r\n\r\n      mergeNodes: function (bracketNode) {\r\n        this.historyStore.addHistoryEntry(this.taxonomyData)\r\n        // remove brackets\r\n        const originNode = bracketNode.substring(1, bracketNode.length - 1)\r\n        const cyBracketNode = this.cy.$(\"node[name='\" + bracketNode + \"']\")\r\n        console.log('bracket node: ', cyBracketNode)\r\n\r\n        // copy children from cyBracketNode to cyOriginNode\r\n        const cyBracketNodeChildren = EdgeHandleActions.getSourceEdges(this.cy, cyBracketNode.id())\r\n        console.log('cyOriginNodeChildren: ', cyBracketNodeChildren)\r\n        if (cyBracketNodeChildren.length > 0) {\r\n          cyBracketNodeChildren.forEach((edge) => {\r\n            // prevent double edges\r\n            let duplicateEdge =\r\n              this.cy.$(\"edge[name='\" + originNode + '->' + edge.target().data().name + \"']\").length > 0\r\n            if (!duplicateEdge) {\r\n              this.cy.add({\r\n                group: 'edges',\r\n                data: {\r\n                  source: originNode,\r\n                  target: edge.target().data().name,\r\n                  name: originNode + '->' + edge.target().data().name,\r\n                },\r\n              })\r\n              // update taxonomy model\r\n              let child = edge.target().data().name\r\n              this.taxonomyData[originNode].push(child)\r\n              console.log('added: ', originNode, '->', child)\r\n            }\r\n          })\r\n        }\r\n        // copy parents from bracketNode to cyOriginNode\r\n        const cyBracketNodeParents = EdgeHandleActions.getTargetEdges(this.cy, cyBracketNode.id())\r\n        if (cyBracketNodeParents.length > 0) {\r\n          cyBracketNodeParents.forEach((edge) => {\r\n            console.log('is edge already there? ')\r\n            let parent = edge.source().data().name\r\n            // remove oldNode form parent in taxonomy model\r\n            let childIndex = this.taxonomyData[parent].indexOf(this.oldNode)\r\n            if (childIndex !== -1) {\r\n              console.log('removing ', this.oldNode, ' from ', parent)\r\n              this.taxonomyData[parent].splice(childIndex, 1)\r\n            }\r\n            let duplicateEdge = this.cy.$(\"edge[name='\" + parent + '->' + originNode + \"']\").length > 0\r\n            if (!duplicateEdge) {\r\n              this.cy.add({\r\n                group: 'edges',\r\n                data: {\r\n                  source: edge.source().data().name,\r\n                  target: originNode,\r\n                  name: edge.source().data().name + '->' + originNode,\r\n                },\r\n              })\r\n              // update taxonomy model\r\n              this.taxonomyData[parent].push(originNode)\r\n              console.log('added: ', parent, '->', originNode)\r\n            }\r\n          })\r\n        }\r\n\r\n        // delete merged entry in taxonomy model also removes the children\r\n        delete this.taxonomyData[this.oldNode]\r\n\r\n        // remove (NODE) from cy-instance\r\n        this.cy.$(\"node[name='\" + originNode + \"']\").classes('node')\r\n        this.cy.remove(\"node[name='\" + bracketNode + \"']\")\r\n        this.renameMenu.destroy()\r\n        this.nodeMenu.destroy()\r\n        this.initNodeMenu()\r\n        // unset variables from initial rename\r\n        this.oldNode = undefined\r\n        this.cacheNode = undefined\r\n        this.renameMenuFlag = false\r\n        this.setTaxonomyData(this.taxonomyData)\r\n      },\r\n\r\n      addEdges: function (oldNode, newNode, taxonomyData) {\r\n        const allEdges = this.cy.$(\"node[name='\" + oldNode + \"']\").connectedEdges()\r\n        allEdges.forEach((element) => {\r\n          let edgeSource = element.source().data().name\r\n          let edgeTarget = element.target().data().name\r\n          if (edgeTarget === oldNode) {\r\n            console.log('parent found (', edgeSource, ')')\r\n            element.json({\r\n              data: { name: edgeSource + '->' + newNode, target: newNode },\r\n            })\r\n            if (this.oldNode !== undefined) {\r\n              let indexParent = taxonomyData[edgeSource].indexOf(this.oldNode)\r\n              taxonomyData[edgeSource][indexParent] = newNode\r\n            } else {\r\n              let indexParent = taxonomyData[edgeSource].indexOf(oldNode)\r\n              taxonomyData[edgeSource][indexParent] = newNode\r\n            }\r\n          } else {\r\n            console.log('child found (', edgeTarget, ')')\r\n            element.json({ data: { name: newNode + '->' + edgeTarget } })\r\n            taxonomyData[newNode].push(edgeTarget)\r\n          }\r\n        })\r\n      },\r\n\r\n      undo: async function () {\r\n        // this.taxonomyData = this.historyStore.getLastState\r\n        // console.log('data: ')\r\n        // console.table(this.taxonomyData)\r\n        // console.log('instance: ', this.cy.elements().length)\r\n        await console.table(this.historyStore.taxonomyHistory[0])\r\n        const tmpData = this.historyStore.taxonomyHistory.pop()\r\n        // const tmpData = this.historyStore.getLastState\r\n        console.table(tmpData)\r\n        this.setTaxonomyData(tmpData)\r\n      },\r\n\r\n      json: function () {\r\n        console.log(this.$root)\r\n      },\r\n\r\n      save: function () {\r\n        adsk\r\n          .fusionSendData('taxonomyDataMessage', JSON.stringify(this.taxonomyData))\r\n          .then((result) => console.log(result))\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  #cy {\r\n    width: 100%;\r\n    height: calc(100vh - 2rem);\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 100;\r\n  }\r\n</style>\r\n","class EdgehandlesColoring {\r\n  color(cy, color) {\r\n    cy.style().selector('.eh-preview, .eh-ghost-edge').style({\r\n      'line-color': color,\r\n    })\r\n    cy.style().selector('.eh-source').style({\r\n      'border-color': color,\r\n    })\r\n    cy.style().selector('.eh-target').style({\r\n      'background-color': color,\r\n      'border-color': 'gray',\r\n    })\r\n    cy.style().selector('.eh-ghost-edge.eh-preview-active').style({\r\n      opacity: 0,\r\n    })\r\n  }\r\n}\r\n\r\nexport default new EdgehandlesColoring()\r\n","function checkForCircle(source, target, taxonomyData) {\r\n  console.log('source: ', source, ' target: ', target)\r\n  let taxonomyDataCopy = Object.assign(\r\n    ...Object.keys(taxonomyData).map((node) => ({\r\n      [node]: taxonomyData[node].map(String),\r\n    }))\r\n  )\r\n  taxonomyDataCopy[source].push(target)\r\n  let queue = Object.keys(taxonomyDataCopy).map((node) => [node])\r\n  while (queue.length) {\r\n    const batch = []\r\n    for (const path of queue) {\r\n      const children = taxonomyDataCopy[path[0]] || []\r\n      for (const node of children) {\r\n        if (node === path[path.length - 1]) return true\r\n        batch.push([node, ...path])\r\n      }\r\n    }\r\n    queue = batch\r\n  }\r\n  return false\r\n}\r\n\r\nexport { checkForCircle }\r\n","import { defineStore } from 'pinia'\r\n\r\nexport const useHistoryStore = defineStore('HistoryStore', {\r\n  // state\r\n  state: () => ({\r\n    taxonomyHistory: [],\r\n  }),\r\n  // actions\r\n  actions: {\r\n    addHistoryEntry(entry) {\r\n      // const tmpObj = JSON.parse(JSON.stringify(entry))\r\n      this.taxonomyHistory.push(JSON.parse(JSON.stringify(entry)))\r\n      // this.taxonomyHistory.forEach((entry, index) => {\r\n      //   console.log('entry ', index)\r\n      //   console.table(entry)\r\n      // })\r\n    },\r\n    printInfo() {\r\n      console.log('history info:')\r\n      console.log('length: ', this.taxonomyHistory.length)\r\n      this.taxonomyHistory.forEach((entry, index) => {\r\n        console.log('entry ', index)\r\n        console.table(entry)\r\n      })\r\n    },\r\n  },\r\n  // getters\r\n  getters: {\r\n    getLastState: (state) => {\r\n      // removed this for state in reference, maybe cause of the json table manipulation??\r\n      // old version:  return JSON.parse(JSON.stringify(this.taxonomyHistory.pop()))\r\n      return JSON.parse(JSON.stringify(state.taxonomyHistory.pop()))\r\n    },\r\n    getPosition: (state) => {\r\n      return state.taxonomyHistory.length\r\n    },\r\n  },\r\n})\r\n","import EdgehandlesColoring from '@/scripts/edgehandle-coloring'\r\nimport { checkForCircle } from '@/scripts/taxonomydata-constraints'\r\nimport { useHistoryStore } from '@/stores/HistoryStore'\r\n\r\nlet validEdge\r\nlet tmpEdge\r\n\r\nclass EdgeHandleActions {\r\n  static drawEdge(nodeName, rearrangeEdge, cy, eh, taxonomyData) {\r\n    console.log(eh)\r\n    const node = cy.$(\"node[name='\" + nodeName + \"']\")\r\n    const taxonomyHistory = useHistoryStore()\r\n    eh.enableDrawMode()\r\n\r\n    eh.start(node)\r\n\r\n    cy.on('cxttap', () => {\r\n      if (eh.drawMode) {\r\n        eh.disableDrawMode()\r\n        eh.stop()\r\n      }\r\n    })\r\n\r\n    cy.on('ehhoverover', (event, sourceNode, targetNode) => {\r\n      let x = checkForCircle(sourceNode.data().name, targetNode.data().name, taxonomyData)\r\n      if (x) {\r\n        console.log('circle found')\r\n        EdgehandlesColoring.color(cy, 'red')\r\n        validEdge = false\r\n      } else if (targetNode.data().name === undefined) {\r\n        EdgehandlesColoring.color(cy, 'purple')\r\n        validEdge = false\r\n      } else {\r\n        console.log('green arrow')\r\n        EdgehandlesColoring.color(cy, 'green')\r\n        validEdge = true\r\n      }\r\n    })\r\n\r\n    cy.on('ehcomplete', (event, sourceNode, targetNode, addedEdge) => {\r\n      console.log('stopped edgecreation')\r\n      console.log(\r\n        'event:',\r\n        event,\r\n        '\\nsource: ',\r\n        sourceNode.data().name,\r\n        '\\ntarget: ',\r\n        targetNode.data().name,\r\n        '\\nadded: ',\r\n        addedEdge.source().data().name,\r\n        '->',\r\n        addedEdge.target().data().name\r\n      )\r\n      if (!validEdge) {\r\n        console.log('remove invalid edge')\r\n        cy.remove(\"edge[source='\" + sourceNode.id() + \"'][target='\" + targetNode.id() + \"']\")\r\n        if (rearrangeEdge) {\r\n          this.recoverEdge(cy, taxonomyData)\r\n        }\r\n      } else if (validEdge && targetNode.data().name !== undefined) {\r\n        if (tmpEdge !== undefined) {\r\n          this.recoverEdge(cy, taxonomyData)\r\n          taxonomyHistory.addHistoryEntry(taxonomyData)\r\n          this.removeEdge(cy, tmpEdge, taxonomyData, true)\r\n        } else {\r\n          taxonomyHistory.addHistoryEntry(taxonomyData)\r\n          taxonomyData[sourceNode.data().name].push(targetNode.data().name)\r\n        }\r\n        cy.$(\"edge[source='\" + sourceNode.id() + \"'][target='\" + targetNode.id() + \"']\").data(\r\n          'name',\r\n          addedEdge.source().data().name + '->' + addedEdge.target().data().name\r\n        )\r\n      }\r\n    })\r\n\r\n    cy.on('ehcancel', () => {\r\n      console.log('cancelled')\r\n      if (rearrangeEdge) {\r\n        this.recoverEdge(cy, taxonomyData)\r\n      }\r\n    })\r\n\r\n    cy.on('ehstop', () => {\r\n      console.log('stopped.')\r\n      rearrangeEdge = false\r\n      tmpEdge = undefined\r\n      eh.disableDrawMode()\r\n      eh.stop()\r\n      cy.off('ehstart')\r\n      cy.off('ehcomplete')\r\n      cy.off('ehhoverover')\r\n      cy.off('ehhoverout')\r\n      cy.off('ehcancel')\r\n      cy.off('ehstop')\r\n      cy.off('cxttap')\r\n    })\r\n  }\r\n\r\n  static initTmpEdge(edge) {\r\n    tmpEdge = edge\r\n  }\r\n\r\n  static getAllEdges(cy, node) {\r\n    const edges = cy.edges(\"[source='\" + node + \"']\")\r\n    cy.edges(\"[target='\" + node + \"']\").forEach((ele) => {\r\n      edges.push(ele)\r\n    })\r\n    return edges\r\n  }\r\n\r\n  static getSourceEdges(cy, node) {\r\n    return cy.edges(\"[source='\" + node + \"']\")\r\n  }\r\n  static getTargetEdges(cy, node) {\r\n    return cy.edges(\"[target='\" + node + \"']\")\r\n  }\r\n\r\n  static removeEdge(cy, edge, taxonomyData, ignoreHistory) {\r\n    if (!ignoreHistory) {\r\n      const taxonomyHistory = useHistoryStore()\r\n      taxonomyHistory.addHistoryEntry(taxonomyData)\r\n    }\r\n    let source = edge.source().data().name\r\n    let target = edge.target().data().name\r\n    taxonomyData[source].splice(taxonomyData[source].indexOf(target), 1)\r\n    cy.remove(\"edge[name='\" + edge.data().name + \"']\")\r\n  }\r\n\r\n  static recoverEdge(cy, taxonomyData) {\r\n    cy.add({\r\n      group: 'edges',\r\n      data: {\r\n        source: tmpEdge.source().data().name,\r\n        target: tmpEdge.target().data().name,\r\n        name: tmpEdge.source().data().name + '->' + tmpEdge.target().data().name,\r\n      },\r\n    })\r\n    taxonomyData[tmpEdge.source().data().name].push(tmpEdge.target().data().name)\r\n  }\r\n}\r\n\r\nexport default EdgeHandleActions\r\n","export let edgeHandleConf = {\r\n  canConnect: function (sourceNode, targetNode) {\r\n    // whether an edge can be created between source and target\r\n\r\n    return sourceNode.id() !== targetNode.id()\r\n  },\r\n  // edgeParams: function( sourceNode, targetNode ){\r\n  //   // for edges between the specified source and target\r\n  //   // return element object to be passed to cy.add() for edge\r\n  //   return {}\r\n  // },\r\n  hoverDelay: 150, // time spent hovering over a target node before it is considered selected\r\n  snap: true, // when enabled, the edge can be drawn by just moving close to a target node (can be confusing on compound graphs)\r\n  snapThreshold: 15, // the target node must be less than or equal to this many pixels away from the cursor/finger\r\n  snapFrequency: 15, // the number of times per second (Hz) that snap checks done (lower is less expensive)\r\n  noEdgeEventsInDraw: true, // set events:no to edges during draws, prevents mouseouts on compounds\r\n  disableBrowserGestures: true, // during an edge drawing gesture, disable browser gestures such as two-finger trackpad swipe and pinch-to-zoom\r\n}\r\n","import { render } from \"./GraphContent.vue?vue&type=template&id=b24b4c4a&scoped=true\"\nimport script from \"./GraphContent.vue?vue&type=script&lang=js\"\nexport * from \"./GraphContent.vue?vue&type=script&lang=js\"\n\nimport \"./GraphContent.vue?vue&type=style&index=0&id=b24b4c4a&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\Jekannadar\\\\WebstormProjects\\\\cls-cytoscape\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-b24b4c4a\"]])\n\nexport default __exports__","import { render } from \"./GraphWrapper.vue?vue&type=template&id=465a0d81\"\nimport script from \"./GraphWrapper.vue?vue&type=script&lang=js\"\nexport * from \"./GraphWrapper.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\Jekannadar\\\\WebstormProjects\\\\cls-cytoscape\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=41c4e742\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\Jekannadar\\\\WebstormProjects\\\\cls-cytoscape\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\r\nimport { createPinia } from 'pinia'\r\nimport App from './App.vue'\r\nimport cytoscape from 'cytoscape'\r\nimport dagre from 'cytoscape-dagre'\r\nimport edgehandles from 'cytoscape-edgehandles'\r\nimport cxtmenu from 'cytoscape-cxtmenu'\r\nimport './tailwind.css'\r\n\r\nconst pinia = createPinia()\r\nconst app = createApp(App)\r\napp.use(pinia)\r\nwindow.fusionJavaScriptHandler = {\r\n  handle: function (action, data) {\r\n    try {\r\n      // console.log('action: ', action, '\\ndata: ', data)\r\n      if (action === 'updateMessage') {\r\n        console.log('updated')\r\n        // updateMessage(data);\r\n      } else if (action === 'taxonomyDataMessage') {\r\n        console.log('TaxonomyData arrived.')\r\n        if (app.config.globalProperties.cy === undefined) {\r\n          app.config.globalProperties.cy = cytoscape\r\n          cytoscape.use(dagre)\r\n          cytoscape.use(edgehandles)\r\n          cytoscape.use(cxtmenu)\r\n        }\r\n\r\n        if (Object.keys(app._context.provides).length === 0) {\r\n          app.provide('taxonomyDataMessage', data)\r\n        }\r\n        if (app._instance === null) {\r\n          app.mount('#app')\r\n        }\r\n      } else if (action === 'taxonomyIDMessage') {\r\n        console.log('taxonomyIDMessage arrived.')\r\n        document.title = data\r\n      } else if (action === 'debugger') {\r\n        console.log('testdebugger')\r\n        // eslint-disable-next-line no-debugger\r\n        debugger\r\n      } else {\r\n        console.log('testelse')\r\n        return `Unexpected command type: ${action}`\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n      console.log(`Exception caught with command: ${action}, data: ${data}`)\r\n    }\r\n    return 'OK'\r\n  },\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkcls_cytoscape\"] = self[\"webpackChunkcls_cytoscape\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(3214); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_GraphWrapper","_component_GraphContent","id","class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","$data","infoText","_hoisted_3","$setup","historyStore","getPosition","onClick","_cache","args","$options","undo","save","_hoisted_4","EdgehandlesColoring","color","cy","style","selector","opacity","checkForCircle","source","target","taxonomyData","console","log","taxonomyDataCopy","Object","assign","keys","map","node","String","push","queue","length","batch","path","children","useHistoryStore","defineStore","state","taxonomyHistory","actions","addHistoryEntry","entry","this","JSON","parse","stringify","printInfo","forEach","index","table","getters","getLastState","pop","validEdge","tmpEdge","EdgeHandleActions","static","nodeName","rearrangeEdge","eh","$","enableDrawMode","start","on","drawMode","disableDrawMode","stop","event","sourceNode","targetNode","x","data","name","undefined","addedEdge","recoverEdge","removeEdge","remove","off","edge","edges","ele","ignoreHistory","splice","indexOf","add","group","edgeHandleConf","canConnect","hoverDelay","snap","snapThreshold","snapFrequency","noEdgeEventsInDraw","disableBrowserGestures","inject","setup","cyNodes","cyEdges","taxonomyString","taxonomyDataMessage","taxonomyDataHistory","undoFlag","taxonomyID","nodeMenu","edgeMenu","coreMenu","renameMenu","renameMenuFlag","cacheNode","oldNodeName","newNodeName","ascIndex","oldNode","mounted","setTaxonomyData","ID","methods","history","key","value","entries","child","cytoscape","container","document","getElementById","layout","fit","spacingFactor","defaultStyle","elements","nodes","addClass","classes","longNodes","nodePairs","position","y","pair","sort","a","b","leftNode","shift","outgoers","rightNode","initNodeMenu","initEdgeMenu","initCoreMenu","edgehandles","cxtmenu","menuRadius","commands","fillColor","content","contentStyle","background","backgroundSize","select","drawEdge","renameNode","removeNode","openMenuEvents","createNode","initRenameMenu","backgroundRepeat","backgroundPositionX","mergeNodes","json","shadowName","addEventListener","renameEvent","slice","removeEventListener","rename","newName","oldName","alert","destroy","addEdges","element","animate","setTimeout","bracketNode","originNode","substring","cyBracketNode","cyBracketNodeChildren","duplicateEdge","cyBracketNodeParents","parent","childIndex","newNode","allEdges","connectedEdges","edgeSource","edgeTarget","indexParent","async","tmpData","$root","adsk","fusionSendData","then","result","__exports__","components","GraphContent","GraphWrapper","render","pinia","createPinia","app","createApp","App","use","window","fusionJavaScriptHandler","handle","action","config","globalProperties","dagre","_context","provides","provide","_instance","mount","title","e","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}
