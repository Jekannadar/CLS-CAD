{"version":3,"file":"js/app.f7f5ca26.js","mappings":"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","sources":["webpack://cls-cytoscape/./src/App.vue","webpack://cls-cytoscape/./src/components/GraphWrapper.vue","webpack://cls-cytoscape/./src/components/GraphContent.vue","webpack://cls-cytoscape/./src/scripts/edgehandle-coloring.js","webpack://cls-cytoscape/./src/scripts/taxonomydata-constraints.js","webpack://cls-cytoscape/./src/stores/HistoryStore.js","webpack://cls-cytoscape/./src/scripts/edgehandle-actions.js","webpack://cls-cytoscape/./src/scripts/edgehandle-conf.js","webpack://cls-cytoscape/./src/components/GraphContent.vue?c1fd","webpack://cls-cytoscape/./src/components/GraphWrapper.vue?7abd","webpack://cls-cytoscape/./src/App.vue?7ccd","webpack://cls-cytoscape/./src/main.js","webpack://cls-cytoscape/webpack/bootstrap","webpack://cls-cytoscape/webpack/runtime/chunk loaded","webpack://cls-cytoscape/webpack/runtime/compat get default export","webpack://cls-cytoscape/webpack/runtime/define property getters","webpack://cls-cytoscape/webpack/runtime/global","webpack://cls-cytoscape/webpack/runtime/hasOwnProperty shorthand","webpack://cls-cytoscape/webpack/runtime/node module decorator","webpack://cls-cytoscape/webpack/runtime/jsonp chunk loading","webpack://cls-cytoscape/webpack/startup"],"sourcesContent":["<template>\r\n  <GraphWrapper></GraphWrapper>\r\n</template>\r\n\r\n<script>\r\n  import GraphWrapper from '@/components/GraphWrapper'\r\n  export default {\r\n    name: 'App',\r\n    components: {\r\n      GraphWrapper,\r\n      // HelloWorld\r\n    },\r\n  }\r\n</script>\r\n\r\n<style></style>\r\n","<template>\r\n  <GraphContent />\r\n</template>\r\n\r\n<script>\r\n  import GraphContent from '@/components/GraphContent'\r\n\r\n  export default {\r\n    name: 'GraphWrapper',\r\n\r\n    components: {\r\n      GraphContent,\r\n    },\r\n  }\r\n</script>\r\n\r\n<style scoped></style>\r\n","<template>\r\n  <div id=\"container\" class=\"h-screen\">\r\n    <div id=\"nav-bar-top\" class=\"bg-background flex flex-row justify-between items-center h-8\">\r\n      <div>{{ infoText }}</div>\r\n      <div class=\"h-full\">\r\n        <button class=\"bg-button-blue hover:bg-button-hover text-white font-scada rounded font-medium h-full px-6 mr-2\" @click=\"relayout\">Layout</button>\r\n      </div>\r\n    </div>\r\n    <div id=\"cy\" class='bg-background'></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import cytoscape from 'cytoscape'\r\n  import EdgeHandleActions from '@/scripts/edgehandle-actions'\r\n  import { edgeHandleConf } from '@/scripts/edgehandle-conf'\r\n  import defaultStyle from '@/styles/default.json'\r\n  import { useHistoryStore } from '@/stores/HistoryStore'\r\n\r\n  export default {\r\n    name: 'GraphContent',\r\n\r\n    inject: ['taxonomyDataMessage'],\r\n\r\n    setup() {\r\n\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        infoText: '',\r\n        cyNodes: [],\r\n        cyEdges: [],\r\n        taxonomyString: this.taxonomyDataMessage,\r\n        taxonomyData: undefined,\r\n        //taxonomyDataHistory: [],\r\n        undoFlag: false,\r\n        taxonomyID: undefined,\r\n        // edge handle add in\r\n        eh: undefined,\r\n        // cxtmenu addin\r\n        nodeMenu: undefined,\r\n        edgeMenu: undefined,\r\n        coreMenu: undefined,\r\n        renameMenu: undefined,\r\n        renameMenuFlag: false,\r\n        cacheNode: undefined,\r\n        // changing element\r\n        oldNodeName: undefined,\r\n        newNodeName: undefined,\r\n        ascIndex: 0,\r\n        position: undefined,\r\n\r\n        // rename existing element\r\n        oldNode: undefined,\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      this.setTaxonomyData(JSON.parse(this.taxonomyString))\r\n      this.taxonomyID = this.taxonomyData.ID\r\n    },\r\n\r\n    methods: {\r\n      setTaxonomyData: function (taxonomyData) {\r\n        this.taxonomyData = taxonomyData\r\n\r\n        this.cyNodes = []\r\n        this.cyEdges = []\r\n\r\n        for (let [key, value] of Object.entries(this.taxonomyData)) {\r\n          this.cyNodes.push({ data: { id: key, name: key } })\r\n          value.forEach((child) => {\r\n            this.cyEdges.push({\r\n              data: { source: key, target: child, name: key + '->' + child },\r\n            })\r\n          })\r\n        }\r\n        this.cy = cytoscape({\r\n          container: document.getElementById('cy'),\r\n          elements: {\r\n            nodes: this.cyNodes,\r\n            edges: this.cyEdges,\r\n          },\r\n          style: defaultStyle,\r\n\r\n        })\r\n        this.cy.nodes().addClass('node')\r\n        this.cy.$(\"node[name='Format']\").classes('AnyPart')\r\n        this.cy.$(\"node[name='Part']\").classes('AnyPart')\r\n        this.cy.$(\"node[name='Attribute']\").classes('AnyPart')\r\n\r\n        this.initNodeMenu()\r\n        this.initEdgeMenu()\r\n        this.initCoreMenu()\r\n        this.eh = this.cy.edgehandles(edgeHandleConf)\r\n        this.relayout();\r\n        if (Object.keys(this.taxonomyData).length == 1){\r\n          this.cy.center(this.cy.nodes()[0])\r\n        }\r\n        this.cy.zoom(this.cy.zoom()*0.9)\r\n        let _this = this\r\n        this.cy.on(\"cxttapstart\", function(e) {\r\n          _this.position = e.renderedPosition\r\n        });\r\n      },\r\n\r\n      initNodeMenu: function () {\r\n        this.nodeMenu = this.cy.cxtmenu({\r\n          menuRadius: 75,\r\n          selector: 'node',\r\n          commands: [\r\n            {\r\n              fillColor: 'rgba(200, 200, 200, 0.75)',\r\n              content: '',\r\n              contentStyle: {\r\n                background: \"url('./icons/arrow-turn-down-solid.svg') no-repeat center\",\r\n                backgroundSize: \"30px 30px\",\r\n              },\r\n              select: (node) => {\r\n                console.log(this.nodeMenu)\r\n                this.drawEdge(node.data().name, false)\r\n              },\r\n            },\r\n            {\r\n              fillColor: 'rgba(200, 200, 200, 0.75)',\r\n              content: '',\r\n              contentStyle: {\r\n                background: \"url('./icons/pen-solid.svg') no-repeat center\",\r\n                backgroundSize: \"30px 30px\",\r\n              },\r\n              select: (node) => {\r\n                this.renameNode(node.data().name)\r\n              },\r\n            },\r\n            {\r\n              fillColor: 'rgb(200, 200, 200, 0.75)',\r\n              content: '',\r\n              contentStyle: {\r\n                background: \"url('./icons/trash-solid.svg') no-repeat center\",\r\n                backgroundSize: \"30px 30px\",\r\n              },\r\n              select: (ele) => {\r\n                this.removeNode(ele.data().name)\r\n              },\r\n            },\r\n          ],\r\n          openMenuEvents: 'cxttapstart taphold',\r\n        })\r\n      },\r\n\r\n      initEdgeMenu: function () {\r\n        this.edgeMenu = this.cy.cxtmenu({\r\n          menuRadius: 75,\r\n          selector: 'edge',\r\n          commands: [\r\n            {\r\n              fillColor: 'rgb(200, 200, 200, 0.75)',\r\n              content: '',\r\n              contentStyle: {\r\n                background: \"url('./icons/trash-solid.svg') no-repeat center\",\r\n                backgroundSize: \"30px 30px\",\r\n              },\r\n              select: (edge) => {\r\n                console.log('deleteEdge')\r\n                EdgeHandleActions.removeEdge(this.cy, edge, this.taxonomyData)\r\n              },\r\n            },\r\n            {\r\n              fillColor: 'rgb(200, 200, 200, 0.75)',\r\n              content: '',\r\n              contentStyle: {\r\n                background: \"url('./icons/arrow-down-a-z-solid.svg') no-repeat center\",\r\n                backgroundSize: \"30px 30px\",\r\n              },\r\n              select: (edge) => {\r\n                EdgeHandleActions.initTmpEdge(edge)\r\n                EdgeHandleActions.removeEdge(this.cy, edge, this.taxonomyData)\r\n                let source = edge.source().data().name\r\n                this.drawEdge(source, true)\r\n              },\r\n            },\r\n          ],\r\n          openMenuEvents: 'cxttapstart taphold',\r\n        })\r\n      },\r\n\r\n      initCoreMenu: function () {\r\n        this.coreMenu = this.cy.cxtmenu({\r\n          menuRadius: 75,\r\n          selector: 'core',\r\n          commands: [\r\n            {\r\n              fillColor: 'rgb(200, 200, 200, 0.75)',\r\n              content: '',\r\n              contentStyle: {\r\n                background: \"url('./icons/diamond-solid.svg') no-repeat center\",\r\n                backgroundSize: \"30px 30px\",\r\n              },\r\n              select: () => {\r\n                this.createNode()\r\n              },\r\n            },\r\n          ],\r\n          openMenuEvents: 'cxttapstart taphold',\r\n        })\r\n      },\r\n\r\n      initRenameMenu: function () {\r\n        this.renameMenu = this.cy.cxtmenu({\r\n          selector: '.highlightNode',\r\n          menuRadius: 75,\r\n          commands: [\r\n            {\r\n              fillColor: 'rgb(200, 200, 200, 0.75)',\r\n              content: '',\r\n              contentStyle: {\r\n                background: \"url('./icons/pen-solid.svg') no-repeat center\",\r\n                backgroundSize: \"30px 30px\",\r\n              },\r\n              select: (node) => {\r\n                this.renameNode(node.data().name)\r\n              },\r\n            },\r\n            {\r\n              fillColor: 'rgb(200, 200, 200, 0.75)',\r\n              content: '',\r\n              contentStyle: {\r\n                background: \"url('./icons/diamond-solid.svg') \",\r\n                backgroundRepeat: \"no-repeat round\",\r\n                backgroundPositionX: 'center',\r\n                backgroundSize: \"50%\",\r\n              },\r\n              select: (ele) => {\r\n                console.log('merge', ele)\r\n                this.mergeNodes(ele.data().name)\r\n              },\r\n            },\r\n          ],\r\n          openMenuEvents: 'cxttapstart taphold',\r\n        })\r\n      },\r\n\r\n      drawEdge: function (nodeName, rearrangeEdge) {\r\n        EdgeHandleActions.drawEdge(nodeName, rearrangeEdge, this.cy, this.eh, this.taxonomyData)\r\n      },\r\n\r\n      createNode: function () {\r\n        this.newNodeName = 'newNode' + this.ascIndex\r\n        this.ascIndex++\r\n        console.log(this.position)\r\n        let node = this.cy.add({ data: { id: this.newNodeName, name: this.newNodeName }, renderedPosition: this.position })\r\n        this.cy.$(\"node[name='\" + this.newNodeName + \"']\").addClass('creatingnode')\r\n        this.taxonomyData[this.newNodeName] = []\r\n        this.renameNode(node.data().name)\r\n      },\r\n\r\n      renameNode: function (node) {\r\n        this.oldNodeName = node\r\n        this.cy.$(\"node[name='\" + this.oldNodeName + \"']\").json({ data: { shadowName: this.oldNodeName } })\r\n        this.cy.$(\"node[name='\" + this.oldNodeName + \"']\").json({ data: { name: '' } })\r\n        this.newNodeName = ''\r\n        document.addEventListener('keydown', this.renameEvent, false)\r\n      },\r\n\r\n      renameEvent: function (event) {\r\n        const key = event.key\r\n        if (key.length === 1) {\r\n          this.newNodeName += key\r\n          this.cy.$(\"node[shadowName='\" + this.oldNodeName + \"']\").json({ data: { name: this.newNodeName } })\r\n        }\r\n        if (key === 'Backspace' || key === 'Delete') {\r\n          // equal to slice(0, this.newNodeName.length - 1)\r\n          this.newNodeName = this.newNodeName.slice(0, -1)\r\n          this.cy.$(\"node[shadowName='\" + this.oldNodeName + \"']\").json({ data: { name: this.newNodeName } })\r\n        }\r\n        if (key === 'Enter') {\r\n          // check if newName is non-empty\r\n          if (this.newNodeName.length > 0) {\r\n            this.cy.$(\"node[shadowName='\" + this.oldNodeName + \"']\").json({ data: { name: this.oldNodeName } })\r\n            document.removeEventListener('keydown', this.renameEvent, false)\r\n            this.rename({\r\n              newName: this.newNodeName,\r\n              oldName: this.oldNodeName,\r\n            })\r\n          } else {\r\n            this.cy.$(\"node[shadowName='\" + this.oldNodeName + \"']\").json({ data: { name: this.oldNodeName } })\r\n            document.removeEventListener('keydown', this.renameEvent, false)\r\n          }\r\n        }\r\n        if (key === 'Escape') {\r\n          // revoke all changes, set old name\r\n          this.cy.$(\"node[shadowName='\" + this.oldNodeName + \"']\").json({ data: { name: this.oldNodeName } })\r\n          document.removeEventListener('keydown', this.renameEvent, false)\r\n        }\r\n      },\r\n\r\n      rename: function (event) {\r\n        if (event.oldName === event.newName) return\r\n        // edge case: rename to existing other Node -> rename to original\r\n        if (this.taxonomyData[event.newName] !== undefined && this.oldNode !== event.newName) {\r\n          // case rename to existing, then rename to other existing\r\n          if (this.renameMenuFlag && this.cacheNode !== event.newName) {\r\n            this.cy.$(\"node[name='\" + this.cacheNode + \"']\").classes('node')\r\n          }\r\n          if (!this.renameMenuFlag) {\r\n            this.oldNode = event.oldName\r\n            this.nodeMenu.destroy()\r\n          }\r\n          this.cy.$(\"node[name='\" + event.oldName + \"']\").classes('highlightNode')\r\n          this.cy.$(\"node[name='\" + event.newName + \"']\").classes('highlightNodeWithoutOptions')\r\n          this.renameMenuFlag = true\r\n          this.cacheNode = event.newName\r\n          this.initRenameMenu()\r\n          this.cy.$(\"[name='\" + event.oldName + \"']\").json({ data: { name: '(' + event.newName + ')' } })\r\n        } else {\r\n          console.log('renaming ', event.oldName, ' to ', event.newName)\r\n          this.taxonomyData[event.newName] = []\r\n          this.addEdges(event.oldName, event.newName, this.taxonomyData)\r\n          delete this.taxonomyData[event.oldName]\r\n          this.cy.$(\"[name='\" + event.oldName + \"']\").json({ data: { name: event.newName } })\r\n          if (this.renameMenuFlag) {\r\n            this.cy.$(\"node[name='\" + this.cacheNode + \"']\").classes('node')\r\n            this.cy.$(\"node[name='\" + event.newName + \"']\").classes('node')\r\n            this.oldNode = undefined\r\n            this.renameMenuFlag = false\r\n            this.cacheNode = undefined\r\n            this.renameMenu.destroy()\r\n            this.initNodeMenu()\r\n          }\r\n          console.table(this.taxonomyData)\r\n          this.renamef360(event.oldName, event.newName)\r\n          this.save()\r\n        }\r\n        this.cy.$(\"node[name='\" + event.newName + \"']\").removeClass('creatingnode')\r\n        this.cy.$(\"node[name='\" + event.newName + \"']\").addClass('node')\r\n      },\r\n\r\n      removeNode: function (element) {\r\n        //this.historyStore.addHistoryEntry(this.taxonomyData)\r\n        // get all edges from AND to selected node\r\n        const edges = EdgeHandleActions.getAllEdges(this.cy, element)\r\n\r\n        // remove edges\r\n        if (edges.length > 0) {\r\n          edges.forEach((element) => {\r\n            let source = element.source().data().name\r\n            let target = element.target().data().name\r\n            this.cy.remove(\"edge[source='\" + source + \"'][target='\" + target + \"']\")\r\n            this.taxonomyData[source].splice(this.taxonomyData[source].indexOf(target), 1)\r\n          })\r\n        }\r\n        // remove node\r\n        this.cy.$(\"node[name='\" + element + \"']\").animate({\r\n          style: {\r\n            opacity: 0.5\r\n          }\r\n        })\r\n        setTimeout(() => {\r\n          this.cy.remove(\"node[name='\" + element + \"']\")\r\n          delete this.taxonomyData[element]\r\n          this.save()\r\n        }, 300)\r\n      },\r\n\r\n      mergeNodes: function (bracketNode) {\r\n        //this.historyStore.addHistoryEntry(this.taxonomyData)\r\n        // remove brackets\r\n        const originNode = bracketNode.substring(1, bracketNode.length - 1)\r\n        const cyBracketNode = this.cy.$(\"node[name='\" + bracketNode + \"']\")\r\n        console.log('bracket node: ', cyBracketNode)\r\n\r\n        // copy children from cyBracketNode to cyOriginNode\r\n        const cyBracketNodeChildren = EdgeHandleActions.getSourceEdges(this.cy, cyBracketNode.id())\r\n        console.log('cyOriginNodeChildren: ', cyBracketNodeChildren)\r\n        if (cyBracketNodeChildren.length > 0) {\r\n          cyBracketNodeChildren.forEach((edge) => {\r\n            // prevent double edges\r\n            let duplicateEdge =\r\n              this.cy.$(\"edge[name='\" + originNode + '->' + edge.target().data().name + \"']\").length > 0\r\n            if (!duplicateEdge) {\r\n              this.cy.add({\r\n                group: 'edges',\r\n                data: {\r\n                  source: originNode,\r\n                  target: edge.target().data().name,\r\n                  name: originNode + '->' + edge.target().data().name,\r\n                },\r\n              })\r\n              // update taxonomy model\r\n              let child = edge.target().data().name\r\n              this.taxonomyData[originNode].push(child)\r\n              console.log('added: ', originNode, '->', child)\r\n            }\r\n          })\r\n        }\r\n        // copy parents from bracketNode to cyOriginNode\r\n        const cyBracketNodeParents = EdgeHandleActions.getTargetEdges(this.cy, cyBracketNode.id())\r\n        if (cyBracketNodeParents.length > 0) {\r\n          cyBracketNodeParents.forEach((edge) => {\r\n            console.log('is edge already there? ')\r\n            let parent = edge.source().data().name\r\n            // remove oldNode form parent in taxonomy model\r\n            let childIndex = this.taxonomyData[parent].indexOf(this.oldNode)\r\n            if (childIndex !== -1) {\r\n              console.log('removing ', this.oldNode, ' from ', parent)\r\n              this.taxonomyData[parent].splice(childIndex, 1)\r\n            }\r\n            let duplicateEdge = this.cy.$(\"edge[name='\" + parent + '->' + originNode + \"']\").length > 0\r\n            if (!duplicateEdge) {\r\n              this.cy.add({\r\n                group: 'edges',\r\n                data: {\r\n                  source: edge.source().data().name,\r\n                  target: originNode,\r\n                  name: edge.source().data().name + '->' + originNode,\r\n                },\r\n              })\r\n              // update taxonomy model\r\n              this.taxonomyData[parent].push(originNode)\r\n              console.log('added: ', parent, '->', originNode)\r\n            }\r\n          })\r\n        }\r\n\r\n        // delete merged entry in taxonomy model also removes the children\r\n        delete this.taxonomyData[this.oldNode]\r\n\r\n        // remove (NODE) from cy-instance\r\n        this.cy.$(\"node[name='\" + originNode + \"']\").classes('node')\r\n        this.cy.remove(\"node[name='\" + bracketNode + \"']\")\r\n        this.renameMenu.destroy()\r\n        this.nodeMenu.destroy()\r\n        this.initNodeMenu()\r\n        // unset variables from initial rename\r\n        this.oldNode = undefined\r\n        this.cacheNode = undefined\r\n        this.renameMenuFlag = false\r\n        this.setTaxonomyData(this.taxonomyData)\r\n        this.save()\r\n      },\r\n\r\n      addEdges: function (oldNode, newNode, taxonomyData) {\r\n        const allEdges = this.cy.$(\"node[name='\" + oldNode + \"']\").connectedEdges()\r\n        allEdges.forEach((element) => {\r\n          let edgeSource = element.source().data().name\r\n          let edgeTarget = element.target().data().name\r\n          if (edgeTarget === oldNode) {\r\n            console.log('parent found (', edgeSource, ')')\r\n            element.json({\r\n              data: { name: edgeSource + '->' + newNode, target: newNode },\r\n            })\r\n            if (this.oldNode !== undefined) {\r\n              let indexParent = taxonomyData[edgeSource].indexOf(this.oldNode)\r\n              taxonomyData[edgeSource][indexParent] = newNode\r\n            } else {\r\n              let indexParent = taxonomyData[edgeSource].indexOf(oldNode)\r\n              taxonomyData[edgeSource][indexParent] = newNode\r\n            }\r\n          } else {\r\n            console.log('child found (', edgeTarget, ')')\r\n            element.json({ data: { name: newNode + '->' + edgeTarget } })\r\n            taxonomyData[newNode].push(edgeTarget)\r\n          }\r\n        })\r\n        this.save()\r\n      },\r\n\r\n      json: function () {\r\n        console.log(this.$root)\r\n      },\r\n\r\n      save: function () {\r\n        adsk\r\n          .fusionSendData('taxonomyDataMessage', JSON.stringify(this.taxonomyData))\r\n          .then((result) => console.log(result))\r\n      },\r\n\r\n      renamef360: function (oldname, newname) {\r\n        let returnData = [oldname, newname];\r\n        let returnDataString = JSON.stringify(returnData);\r\n        adsk\r\n            .fusionSendData(\"renameDataNotification\", returnDataString)\r\n            .then((result) => console.log(result))\r\n      },\r\n\r\n      relayout: function () {\r\n        let defaults = {\r\n          spacingFactor: 0.9,\r\n          nodeDimensionsIncludeLabels: true, // whether labels should be included in determining the space used by a node\r\n          animate: true, // whether to transition the node positions\r\n          animationDuration: 500, // duration of animation in ms if enabled\r\n          fit: Object.keys(this.taxonomyData).length > 1 ? true : false,\r\n          padding: 0,\r\n        };\r\n        this.cy.layout({ name: 'dagre', defaults }).run()\r\n        this.cy.zoom(this.cy.zoom()*0.9)\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  #cy {\r\n    width: 100%;\r\n    height: calc(100vh - 2rem);\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 100;\r\n  }\r\n</style>\r\n","class EdgehandlesColoring {\r\n  color(cy, color) {\r\n    cy.style().selector('.eh-preview, .eh-ghost-edge').style({\r\n      'line-color': color,\r\n    })\r\n    cy.style().selector('.eh-source').style({\r\n      'border-color': color,\r\n    })\r\n    cy.style().selector('.eh-target').style({\r\n      'background-color': color,\r\n      'border-color': 'gray',\r\n    })\r\n    cy.style().selector('.eh-ghost-edge.eh-preview-active').style({\r\n      opacity: 0,\r\n    })\r\n  }\r\n}\r\n\r\nexport default new EdgehandlesColoring()\r\n","function checkForCircle(source, target, taxonomyData) {\r\n  console.log('source: ', source, ' target: ', target)\r\n  let taxonomyDataCopy = Object.assign(\r\n    ...Object.keys(taxonomyData).map((node) => ({\r\n      [node]: taxonomyData[node].map(String),\r\n    }))\r\n  )\r\n  taxonomyDataCopy[source].push(target)\r\n  let queue = Object.keys(taxonomyDataCopy).map((node) => [node])\r\n  while (queue.length) {\r\n    const batch = []\r\n    for (const path of queue) {\r\n      const children = taxonomyDataCopy[path[0]] || []\r\n      for (const node of children) {\r\n        if (node === path[path.length - 1]) return true\r\n        batch.push([node, ...path])\r\n      }\r\n    }\r\n    queue = batch\r\n  }\r\n  return false\r\n}\r\n\r\nexport { checkForCircle }\r\n","import { defineStore } from 'pinia'\r\n\r\nexport const useHistoryStore = defineStore('HistoryStore', {\r\n  // state\r\n  state: () => ({\r\n    taxonomyHistory: [],\r\n  }),\r\n  // actions\r\n  actions: {\r\n    addHistoryEntry(entry) {\r\n      // const tmpObj = JSON.parse(JSON.stringify(entry))\r\n      this.taxonomyHistory.push(JSON.parse(JSON.stringify(entry)))\r\n      // this.taxonomyHistory.forEach((entry, index) => {\r\n      //   console.log('entry ', index)\r\n      //   console.table(entry)\r\n      // })\r\n    },\r\n    printInfo() {\r\n      console.log('history info:')\r\n      console.log('length: ', this.taxonomyHistory.length)\r\n      this.taxonomyHistory.forEach((entry, index) => {\r\n        console.log('entry ', index)\r\n        console.table(entry)\r\n      })\r\n    },\r\n  },\r\n  // getters\r\n  getters: {\r\n    getLastState: (state) => {\r\n      // removed this for state in reference, maybe cause of the json table manipulation??\r\n      // old version:  return JSON.parse(JSON.stringify(this.taxonomyHistory.pop()))\r\n      return JSON.parse(JSON.stringify(state.taxonomyHistory.pop()))\r\n    },\r\n    getPosition: (state) => {\r\n      return state.taxonomyHistory.length\r\n    },\r\n  },\r\n})\r\n","import EdgehandlesColoring from '@/scripts/edgehandle-coloring'\r\nimport { checkForCircle } from '@/scripts/taxonomydata-constraints'\r\nimport { useHistoryStore } from '@/stores/HistoryStore'\r\n\r\nlet validEdge\r\nlet tmpEdge\r\n\r\nclass EdgeHandleActions {\r\n  static drawEdge(nodeName, rearrangeEdge, cy, eh, taxonomyData) {\r\n    console.log(eh)\r\n    const node = cy.$(\"node[name='\" + nodeName + \"']\")\r\n    //const taxonomyHistory = useHistoryStore()\r\n    eh.enableDrawMode()\r\n\r\n    eh.start(node)\r\n\r\n    cy.on('cxttap', () => {\r\n      if (eh.drawMode) {\r\n        eh.disableDrawMode()\r\n        eh.stop()\r\n      }\r\n    })\r\n\r\n    cy.on('ehhoverover', (event, sourceNode, targetNode) => {\r\n      let x = checkForCircle(sourceNode.data().name, targetNode.data().name, taxonomyData)\r\n      if (x) {\r\n        console.log('circle found')\r\n        EdgehandlesColoring.color(cy, 'red')\r\n        validEdge = false\r\n      } else if (targetNode.data().name === undefined) {\r\n        EdgehandlesColoring.color(cy, 'purple')\r\n        validEdge = false\r\n      } else {\r\n        console.log('green arrow')\r\n        EdgehandlesColoring.color(cy, 'green')\r\n        validEdge = true\r\n      }\r\n    })\r\n\r\n    cy.on('ehcomplete', (event, sourceNode, targetNode, addedEdge) => {\r\n      console.log('stopped edgecreation')\r\n      console.log(\r\n        'event:',\r\n        event,\r\n        '\\nsource: ',\r\n        sourceNode.data().name,\r\n        '\\ntarget: ',\r\n        targetNode.data().name,\r\n        '\\nadded: ',\r\n        addedEdge.source().data().name,\r\n        '->',\r\n        addedEdge.target().data().name\r\n      )\r\n      if (!validEdge) {\r\n        console.log('remove invalid edge')\r\n        cy.remove(\"edge[source='\" + sourceNode.id() + \"'][target='\" + targetNode.id() + \"']\")\r\n        if (rearrangeEdge) {\r\n          this.recoverEdge(cy, taxonomyData)\r\n        }\r\n      } else if (validEdge && targetNode.data().name !== undefined) {\r\n        if (tmpEdge !== undefined) {\r\n          this.recoverEdge(cy, taxonomyData)\r\n          //taxonomyHistory.addHistoryEntry(taxonomyData)\r\n          this.removeEdge(cy, tmpEdge, taxonomyData, true)\r\n        } else {\r\n          //taxonomyHistory.addHistoryEntry(taxonomyData)\r\n          taxonomyData[sourceNode.data().name].push(targetNode.data().name)\r\n          adsk\r\n            .fusionSendData('taxonomyDataMessage', JSON.stringify(taxonomyData))\r\n            .then((result) => console.log(result))\r\n\r\n        }\r\n        cy.$(\"edge[source='\" + sourceNode.id() + \"'][target='\" + targetNode.id() + \"']\").data(\r\n          'name',\r\n          addedEdge.source().data().name + '->' + addedEdge.target().data().name\r\n        )\r\n      }\r\n    })\r\n\r\n    cy.on('ehcancel', () => {\r\n      console.log('cancelled')\r\n      if (rearrangeEdge) {\r\n        this.recoverEdge(cy, taxonomyData)\r\n      }\r\n    })\r\n\r\n    cy.on('ehstop', () => {\r\n      console.log('stopped.')\r\n      rearrangeEdge = false\r\n      tmpEdge = undefined\r\n      eh.disableDrawMode()\r\n      eh.stop()\r\n      cy.off('ehstart')\r\n      cy.off('ehcomplete')\r\n      cy.off('ehhoverover')\r\n      cy.off('ehhoverout')\r\n      cy.off('ehcancel')\r\n      cy.off('ehstop')\r\n      cy.off('cxttap')\r\n    })\r\n  }\r\n\r\n  static initTmpEdge(edge) {\r\n    tmpEdge = edge\r\n  }\r\n\r\n  static getAllEdges(cy, node) {\r\n    const edges = cy.edges(\"[source='\" + node + \"']\")\r\n    cy.edges(\"[target='\" + node + \"']\").forEach((ele) => {\r\n      edges.push(ele)\r\n    })\r\n    return edges\r\n  }\r\n\r\n  static getSourceEdges(cy, node) {\r\n    return cy.edges(\"[source='\" + node + \"']\")\r\n  }\r\n  static getTargetEdges(cy, node) {\r\n    return cy.edges(\"[target='\" + node + \"']\")\r\n  }\r\n\r\n  static removeEdge(cy, edge, taxonomyData) {\r\n    let source = edge.source().data().name\r\n    let target = edge.target().data().name\r\n    taxonomyData[source].splice(taxonomyData[source].indexOf(target), 1)\r\n    cy.remove(\"edge[name='\" + edge.data().name + \"']\")\r\n    adsk\r\n      .fusionSendData('taxonomyDataMessage', JSON.stringify(taxonomyData))\r\n      .then((result) => console.log(result))\r\n  }\r\n\r\n  static recoverEdge(cy, taxonomyData) {\r\n    cy.add({\r\n      group: 'edges',\r\n      data: {\r\n        source: tmpEdge.source().data().name,\r\n        target: tmpEdge.target().data().name,\r\n        name: tmpEdge.source().data().name + '->' + tmpEdge.target().data().name,\r\n      },\r\n    })\r\n    taxonomyData[tmpEdge.source().data().name].push(tmpEdge.target().data().name)\r\n    adsk\r\n      .fusionSendData('taxonomyDataMessage', JSON.stringify(taxonomyData))\r\n      .then((result) => console.log(result))\r\n  }\r\n}\r\n\r\nexport default EdgeHandleActions\r\n","export let edgeHandleConf = {\r\n  canConnect: function (sourceNode, targetNode) {\r\n    // whether an edge can be created between source and target\r\n\r\n    return sourceNode.id() !== targetNode.id()\r\n  },\r\n  // edgeParams: function( sourceNode, targetNode ){\r\n  //   // for edges between the specified source and target\r\n  //   // return element object to be passed to cy.add() for edge\r\n  //   return {}\r\n  // },\r\n  hoverDelay: 150, // time spent hovering over a target node before it is considered selected\r\n  snap: true, // when enabled, the edge can be drawn by just moving close to a target node (can be confusing on compound graphs)\r\n  snapThreshold: 15, // the target node must be less than or equal to this many pixels away from the cursor/finger\r\n  snapFrequency: 15, // the number of times per second (Hz) that snap checks done (lower is less expensive)\r\n  noEdgeEventsInDraw: true, // set events:no to edges during draws, prevents mouseouts on compounds\r\n  disableBrowserGestures: true, // during an edge drawing gesture, disable browser gestures such as two-finger trackpad swipe and pinch-to-zoom\r\n}\r\n","import { render } from \"./GraphContent.vue?vue&type=template&id=2459180a&scoped=true\"\nimport script from \"./GraphContent.vue?vue&type=script&lang=js\"\nexport * from \"./GraphContent.vue?vue&type=script&lang=js\"\n\nimport \"./GraphContent.vue?vue&type=style&index=0&id=2459180a&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\Jekannadar\\\\WebstormProjects\\\\cls-cytoscape\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2459180a\"]])\n\nexport default __exports__","import { render } from \"./GraphWrapper.vue?vue&type=template&id=465a0d81\"\nimport script from \"./GraphWrapper.vue?vue&type=script&lang=js\"\nexport * from \"./GraphWrapper.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\Jekannadar\\\\WebstormProjects\\\\cls-cytoscape\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=41c4e742\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\Jekannadar\\\\WebstormProjects\\\\cls-cytoscape\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\r\nimport { createPinia } from 'pinia'\r\nimport App from './App.vue'\r\nimport cytoscape from 'cytoscape'\r\nimport dagre from 'cytoscape-dagre'\r\nimport edgehandles from 'cytoscape-edgehandles'\r\nimport cxtmenu from 'cytoscape-cxtmenu'\r\nimport './tailwind.css'\r\n\r\nconst pinia = createPinia()\r\nconst app = createApp(App)\r\napp.use(pinia)\r\nwindow.fusionJavaScriptHandler = {\r\n  handle: function (action, data) {\r\n    try {\r\n      // console.log('action: ', action, '\\ndata: ', data)\r\n      if (action === 'updateMessage') {\r\n        console.log('updated')\r\n        // updateMessage(data);\r\n      } else if (action === 'taxonomyDataMessage') {\r\n        console.log('TaxonomyData arrived.')\r\n        if (app.config.globalProperties.cy === undefined) {\r\n          app.config.globalProperties.cy = cytoscape\r\n          cytoscape.use(dagre)\r\n          cytoscape.use(edgehandles)\r\n          cytoscape.use(cxtmenu)\r\n        }\r\n\r\n        if (Object.keys(app._context.provides).length === 0) {\r\n          app.provide('taxonomyDataMessage', data)\r\n        }\r\n        if (app._instance === null) {\r\n          app.mount('#app')\r\n        }\r\n      } else if (action === 'taxonomyIDMessage') {\r\n        console.log('taxonomyIDMessage arrived.')\r\n        document.title = data\r\n      } else if (action === 'debugger') {\r\n        console.log('testdebugger')\r\n        // eslint-disable-next-line no-debugger\r\n        debugger\r\n      } else {\r\n        console.log('testelse')\r\n        return `Unexpected command type: ${action}`\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n      console.log(`Exception caught with command: ${action}, data: ${data}`)\r\n    }\r\n    return 'OK'\r\n  },\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkcls_cytoscape\"] = self[\"webpackChunkcls_cytoscape\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(2360); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_GraphWrapper","_component_GraphContent","id","class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","$data","infoText","_hoisted_3","onClick","_cache","args","$options","relayout","_hoisted_4","EdgehandlesColoring","color","cy","style","selector","opacity","checkForCircle","source","target","taxonomyData","console","log","taxonomyDataCopy","Object","assign","keys","map","node","String","push","queue","length","batch","path","children","defineStore","state","taxonomyHistory","actions","addHistoryEntry","entry","this","JSON","parse","stringify","printInfo","forEach","index","table","getters","getLastState","pop","getPosition","validEdge","tmpEdge","EdgeHandleActions","static","nodeName","rearrangeEdge","eh","$","enableDrawMode","start","on","drawMode","disableDrawMode","stop","event","sourceNode","targetNode","x","data","name","undefined","addedEdge","recoverEdge","removeEdge","adsk","fusionSendData","then","result","remove","off","edge","edges","ele","splice","indexOf","add","group","edgeHandleConf","canConnect","hoverDelay","snap","snapThreshold","snapFrequency","noEdgeEventsInDraw","disableBrowserGestures","inject","setup","cyNodes","cyEdges","taxonomyString","taxonomyDataMessage","undoFlag","taxonomyID","nodeMenu","edgeMenu","coreMenu","renameMenu","renameMenuFlag","cacheNode","oldNodeName","newNodeName","ascIndex","position","oldNode","mounted","setTaxonomyData","ID","methods","key","value","entries","child","cytoscape","container","document","getElementById","elements","nodes","defaultStyle","addClass","classes","initNodeMenu","initEdgeMenu","initCoreMenu","edgehandles","center","zoom","_this","e","renderedPosition","cxtmenu","menuRadius","commands","fillColor","content","contentStyle","background","backgroundSize","select","drawEdge","renameNode","removeNode","openMenuEvents","createNode","initRenameMenu","backgroundRepeat","backgroundPositionX","mergeNodes","json","shadowName","addEventListener","renameEvent","slice","removeEventListener","rename","newName","oldName","destroy","addEdges","renamef360","save","removeClass","element","animate","setTimeout","bracketNode","originNode","substring","cyBracketNode","cyBracketNodeChildren","duplicateEdge","cyBracketNodeParents","parent","childIndex","newNode","allEdges","connectedEdges","edgeSource","edgeTarget","indexParent","$root","oldname","newname","returnData","returnDataString","defaults","spacingFactor","nodeDimensionsIncludeLabels","animationDuration","fit","padding","layout","run","__exports__","components","GraphContent","GraphWrapper","render","pinia","createPinia","app","createApp","App","use","window","fusionJavaScriptHandler","handle","action","config","globalProperties","dagre","_context","provides","provide","_instance","mount","title","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}
